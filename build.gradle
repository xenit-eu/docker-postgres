plugins {
    id "eu.xenit.docker" version "5.2.0" apply false // Have a look at the releases to find the latest one
}

project(':9.5') {
    project.ext {
        baseImage = 'postgres:9.5.25'
        tags = ['9.5', '9.5.25']
    }
}

project(':9.6') {
    project.ext {
        baseImage = 'postgres:9.6.21'
        tags = ['9', '9.6', '9.6.21']
    }
}

project(':10') {
    project.ext {
        baseImage = 'postgres:10.16'
        tags = ['10', '10.16']
    }
}

project(':11') {
    project.ext {
        baseImage = 'postgres:11.11'
        tags = ['11', '11.11']
    }
}

project(':12') {
    project.ext {
        baseImage = 'postgres:12.6'
        tags = ['12', '12.6']
    }
}

project(':13') {
    project.ext {
        baseImage = 'postgres:13.2'
        tags = ['13', '13.2', 'latest']
    }
}

subprojects {

    project.projectDir.mkdir()

    project.ext {
        pgVersion = project.projectDir.name
        walgVersion = 'v0.2.15'
    }

    apply plugin: 'eu.xenit.docker'
    apply plugin: 'eu.xenit.docker-compose'
    apply plugin: 'java'

    repositories {
        mavenCentral()
    }

    dependencies {
        testImplementation group: 'junit', name: 'junit', version: '4.13.1'
        testImplementation group: 'org.postgresql', name: 'postgresql', version: '42.2.18'
    }

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    sourceSets {
        test {
            java {
                srcDirs "$project.parent.projectDir/src/test/java"
            }
        }
    }

    task copyDocker(type: Copy) {
        from file("$project.parent.projectDir/src/main/docker")
        into "$project.buildDir/docker"
    }

    buildDockerImage.dependsOn(copyDocker)

    docker {
        registryCredentials {
            username = System.getenv("DOCKER_USER")
            password = System.getenv("DOCKER_PASSWORD")
        }
    }

    dockerBuild {
        dockerFile = file("$copyDocker.destinationDir/Dockerfile")
        repositories = ['xenit/postgres']
        tags = project.tags
    }

    dockerCompose {
        useComposeFiles = ["$project.parent.projectDir/src/main/compose/docker-compose.yml"]
    }

    buildDockerImage {
        buildArgs = ['PGVERSION': project.pgVersion, 'BASEIMAGE': project.baseImage, 'WALGVERSION': project.walgVersion]
    }

    dockerCompose.isRequiredBy(test)

}