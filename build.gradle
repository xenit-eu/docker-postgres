plugins {
    id "eu.xenit.docker" version "4.0.3" apply false // Have a look at the releases to find the latest one
}

project(':9.4') {
    project.ext {
        baseImage = 'postgres:9.4.24'
        tags = ['9.4', '9.4.24']
    }
}

project(':9.5') {
    project.ext {
        baseImage = 'postgres:9.5.19'
        tags = ['9.5', '9.5.19']
    }
}

project(':9.6') {
    project.ext {
        baseImage = 'postgres:9.6.15'
        tags = ['9', '9.6', '9.6.15']
    }
}

project(':10') {
    project.ext {
        baseImage = 'postgres:10.10'
        tags = ['10', '10.10']
    }
}

project(':11') {
    project.ext {
        baseImage = 'postgres:11.5'
        tags = ['11', '11.5', 'latest']
    }
}

import eu.xenit.gradle.JenkinsUtil

subprojects {

    project.projectDir.mkdir()

    project.ext {
        pgVersion = project.projectDir.name
    }

    apply plugin: 'eu.xenit.docker'
    apply plugin: 'java'

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.11'
        testCompile group: 'postgresql', name: 'postgresql', version: '9.1-901-1.jdbc4'
    }

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    sourceSets {
        test {
            java {
                srcDirs "$project.parent.projectDir/src/test/java"
            }
        }
    }

    task copyDocker(type: Copy) {
        from file("$project.parent.projectDir/src/main/docker")
        into "$project.buildDir/docker"
    }

    buildDockerImage.dependsOn(copyDocker)

    docker {
        registryCredentials {
            username = System.getenv("DOCKER_USER")
            password = System.getenv("DOCKER_PASSWORD")
        }
    }

    dockerFile {
        dockerFile = file("$copyDocker.destinationDir/Dockerfile")
        dockerBuild {
            repository = 'xeniteu/postgres'
            tags = project.tags
            automaticTags = false
        }
    }

    dockerCompose {
        useComposeFiles = ["$project.parent.projectDir/src/main/compose/docker-compose.yml"]
    }

    buildDockerImage {
        buildArgs = ['PGVERSION': project.pgVersion, 'BASEIMAGE': project.baseImage]
    }

    dockerCompose.isRequiredBy(test)

}